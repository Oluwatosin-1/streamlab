# Generated by Django 5.1.2 on 2025-03-22 00:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("streaming", "0004_alter_streamingconfiguration_backup_rtmp_url_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name="chatmessage",
            name="session_uuid",
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="streaming_session",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat_messages",
                to="streaming.streamingsession",
            ),
        ),
        migrations.AddField(
            model_name="scheduledvideo",
            name="is_published",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="streamingsession",
            name="error_message",
            field=models.TextField(
                blank=True,
                help_text="Error details if session encounters issues",
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="streamingconfiguration",
            name="backup_rtmp_url",
            field=models.CharField(
                blank=True,
                help_text="Backup RTMP endpoint",
                max_length=500,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid URL. It should start with http, https, rtmp or rtmps.",
                        regex="^(https?|rtmps?|ftp)://.+$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="streamingconfiguration",
            name="embed_chat_url",
            field=models.CharField(
                blank=True,
                help_text="URL to embed multi-platform chat",
                max_length=500,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid URL. It should start with http, https, rtmp or rtmps.",
                        regex="^(https?|rtmps?|ftp)://.+$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="streamingconfiguration",
            name="embed_player_url",
            field=models.CharField(
                blank=True,
                help_text="URL to embed the web player",
                max_length=500,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid URL. It should start with http, https, rtmp or rtmps.",
                        regex="^(https?|rtmps?|ftp)://.+$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="streamingconfiguration",
            name="rtmp_url",
            field=models.CharField(
                help_text="RTMP endpoint (primary)",
                max_length=500,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Enter a valid URL. It should start with http, https, rtmp or rtmps.",
                        regex="^(https?|rtmps?|ftp)://.+$",
                    )
                ],
            ),
        ),
        migrations.CreateModel(
            name="StreamingPlatformAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("youtube", "YouTube"),
                            ("facebook", "Facebook"),
                            ("twitch", "Twitch"),
                            ("instagram", "Instagram"),
                            ("tiktok", "TikTok"),
                            ("telegram", "Telegram"),
                            ("custom", "Custom"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "account_username",
                    models.CharField(
                        help_text="Username or channel name on the platform",
                        max_length=255,
                    ),
                ),
                (
                    "rtmp_url",
                    models.CharField(
                        blank=True,
                        help_text="RTMP URL for the account",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "stream_key",
                    models.CharField(
                        blank=True,
                        help_text="Stream key for the account",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "display_name",
                    models.CharField(
                        blank=True,
                        help_text="Display name for the account",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "access_token",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="streaming_platform_accounts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
